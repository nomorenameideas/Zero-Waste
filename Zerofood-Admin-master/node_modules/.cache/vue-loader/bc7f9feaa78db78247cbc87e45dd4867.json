{"remainingRequest":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\src\\components\\ProductsTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\src\\components\\ProductsTable.vue","mtime":1579289834000},{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n  data: () => ({\n    multiLine: true,\n    snackbar: false,\n    text: '',\n    color: '',\n    dialog: false,\n    search: '',\n    headers: [\n      { text: 'Name', value: 'name' },\n      { text: 'Price', value: 'price' },\n      { text: 'CategoryId', value: 'category_id' },\n      { text: 'Image', value: 'image' },\n      { text: 'Actions', value: 'action', sortable: false }\n    ],\n    users: [],\n    editedIndex: -1,\n    editedItem: {\n      name: '',\n      image: '',\n      category: '',\n      price: ''\n    },\n    defaultItem: {\n      name: '',\n      username: '',\n      phone: '',\n      email: ''\n    },\n    categories: ['Arduino', 'Alictro', 'fizz', 'buzz'],\n    items: [],\n    value: ['1', '2', '3', '4'],\n    itemsName: [],\n    validateMsg: ''\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? 'New Article' : 'Edit Article'\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close()\n    }\n  },\n  async created() {\n    console.log({ LOL: 1 })\n    await this.getCategories()\n    this.initialize()\n  },\n  methods: {\n    initialize() {\n      this.$axios.get('/meal').then(response => (this.users = response.data))\n    },\n    getCategories() {\n      this.$axios.get('/category').then(response => {\n        for (let i of response.data) {\n          this.itemsName.push(i.name)\n          this.items.push(i.id)\n        }\n      })\n    },\n    handleFileUpload() {\n      this.file = this.$refs.file\n      let formData = new FormData()\n      formData.append('file', this.file)\n      this.editedItem.image = formData\n      console.log(this.$refs.file)\n    },\n    editItem(item) {\n      this.editedIndex = this.users.indexOf(item)\n      //we send the edited item in put request insted\n      this.$axios\n        .put(`/meal/${item.id}`, {}, { params: item })\n        .then(response => console.log(response))\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n    navigate(item, id) {\n      this.$router.push({ name: 'project', params: { id } })\n    },\n    deleteItem(item) {\n      const index = this.users.indexOf(item)\n      confirm('Are you sure you want to delete this Meal?') &&\n        this.$axios.delete(`/meal/delete/${item.id}`)\n      //we send the deleted item in delete request insted\n      this.users.splice(index, 1)\n      ;(this.text = 'A Meal has been added successfully'), (this.color = 'red')\n      this.snackbar = true\n    },\n    close() {\n      this.dialog = false\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    async save() {\n      //we send the new iteam in post request\n      this.editedItem.category = this.items[\n        this.itemsName.indexOf(this.editedItem.category)\n      ]\n      if (!this.editedItem.name)\n        return (this.validateMsg = 'Name is required ✋')\n      if (!this.editedItem.price)\n        return (this.validateMsg = 'Price is required ✋')\n      if (!this.editedItem.category)\n        return (this.validateMsg = 'Category is required ✋')\n\n      let fd = new FormData()\n      fd.append('image', this.editedItem.image)\n      fd.append('category', this.editedItem.category)\n      fd.append('name', this.editedItem.name)\n      fd.append('image', this.file)\n      fd.append('price', this.editedItem.price)\n      await this.$axios.post('/meal/store', fd).then(res => console.log(res))\n      this.users.push(this.editedItem)\n      this.close()\n      ;(this.text = 'A Meal has been added'), (this.color = 'green')\n      this.snackbar = true\n    }\n  }\n}\n",{"version":3,"sources":["ProductsTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ProductsTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-data-table\n      :search=\"search\"\n      :headers=\"headers\"\n      :items=\"users\"\n      sort-by=\"calories\"\n      class=\"elevation-1\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat color=\"white\">\n          <v-text-field\n            v-model=\"search\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n          <v-spacer></v-spacer>\n          <v-dialog v-model=\"dialog\" max-width=\"600px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn color=\"dark accent-4\" dark class=\"mb-2\" v-on=\"on\"\n                >New Product</v-btn\n              >\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"headline\">New Product</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container grid-list-lg>\n                  <p\n                    class=\"text-dark text-center bg-dark py-2 px-4\"\n                    v-if=\"validateMsg != ''\"\n                  >\n                    {{ validateMsg }}\n                  </p>\n                  <v-layout wrap>\n                    <v-flex xs12 sm12 md12>\n                      <v-text-field\n                        v-model=\"editedItem.name\"\n                        label=\"Name\"\n                        required\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex xs12 sm12 md12>\n                      <v-text-field\n                        v-model=\"editedItem.price\"\n                        label=\" Price\"\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex xs12 sm12 md12>\n                      <select v-model=\"editedItem.category\">\n                        <option\n                          v-for=\"(item, index) in items\"\n                          :key=\"index\"\n                          :value=\"item.id\"\n                          >{{ item.name }}</option\n                        >\n                      </select>\n                      <v-select\n                        v-model=\"editedItem.category\"\n                        :items=\"itemsName\"\n                        menu-props=\"auto\"\n                        label=\"Select\"\n                        hide-details\n                        prepend-icon=\"map\"\n                        single-line\n                      ></v-select>\n                    </v-flex>\n                    <v-flex xs12 sm12 md12>\n                      <v-file-input\n                        show-size\n                        label=\"File input\"\n                        v-model=\"file\"\n                      ></v-file-input>\n                    </v-flex>\n                  </v-layout>\n                </v-container>\n              </v-card-text>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"primary accent-4\" text @click=\"close\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"primary accent-4\" text @click=\"save\">Save</v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.action=\"{ item }\">\n        <v-icon small @click=\"navigate(item, item.id)\"\n          >mdi-cursor-default-click</v-icon\n        >\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"\n          >mdi-pencil-outline</v-icon\n        >\n        <v-icon small @click=\"deleteItem(item)\">mdi-delete</v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"white--text primary accent-4\" @click=\"initialize\"\n          >Reset</v-btn\n        >\n      </template>\n    </v-data-table>\n    <v-snackbar v-model=\"snackbar\" :multi-line=\"multiLine\">\n      {{ text }}\n      <v-btn :color=\"color\" text @click=\"snackbar = false\">Close</v-btn>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  data: () => ({\n    multiLine: true,\n    snackbar: false,\n    text: '',\n    color: '',\n    dialog: false,\n    search: '',\n    headers: [\n      { text: 'Name', value: 'name' },\n      { text: 'Price', value: 'price' },\n      { text: 'CategoryId', value: 'category_id' },\n      { text: 'Image', value: 'image' },\n      { text: 'Actions', value: 'action', sortable: false }\n    ],\n    users: [],\n    editedIndex: -1,\n    editedItem: {\n      name: '',\n      image: '',\n      category: '',\n      price: ''\n    },\n    defaultItem: {\n      name: '',\n      username: '',\n      phone: '',\n      email: ''\n    },\n    categories: ['Arduino', 'Alictro', 'fizz', 'buzz'],\n    items: [],\n    value: ['1', '2', '3', '4'],\n    itemsName: [],\n    validateMsg: ''\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? 'New Article' : 'Edit Article'\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close()\n    }\n  },\n  async created() {\n    console.log({ LOL: 1 })\n    await this.getCategories()\n    this.initialize()\n  },\n  methods: {\n    initialize() {\n      this.$axios.get('/meal').then(response => (this.users = response.data))\n    },\n    getCategories() {\n      this.$axios.get('/category').then(response => {\n        for (let i of response.data) {\n          this.itemsName.push(i.name)\n          this.items.push(i.id)\n        }\n      })\n    },\n    handleFileUpload() {\n      this.file = this.$refs.file\n      let formData = new FormData()\n      formData.append('file', this.file)\n      this.editedItem.image = formData\n      console.log(this.$refs.file)\n    },\n    editItem(item) {\n      this.editedIndex = this.users.indexOf(item)\n      //we send the edited item in put request insted\n      this.$axios\n        .put(`/meal/${item.id}`, {}, { params: item })\n        .then(response => console.log(response))\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n    navigate(item, id) {\n      this.$router.push({ name: 'project', params: { id } })\n    },\n    deleteItem(item) {\n      const index = this.users.indexOf(item)\n      confirm('Are you sure you want to delete this Meal?') &&\n        this.$axios.delete(`/meal/delete/${item.id}`)\n      //we send the deleted item in delete request insted\n      this.users.splice(index, 1)\n      ;(this.text = 'A Meal has been added successfully'), (this.color = 'red')\n      this.snackbar = true\n    },\n    close() {\n      this.dialog = false\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    async save() {\n      //we send the new iteam in post request\n      this.editedItem.category = this.items[\n        this.itemsName.indexOf(this.editedItem.category)\n      ]\n      if (!this.editedItem.name)\n        return (this.validateMsg = 'Name is required ✋')\n      if (!this.editedItem.price)\n        return (this.validateMsg = 'Price is required ✋')\n      if (!this.editedItem.category)\n        return (this.validateMsg = 'Category is required ✋')\n\n      let fd = new FormData()\n      fd.append('image', this.editedItem.image)\n      fd.append('category', this.editedItem.category)\n      fd.append('name', this.editedItem.name)\n      fd.append('image', this.file)\n      fd.append('price', this.editedItem.price)\n      await this.$axios.post('/meal/store', fd).then(res => console.log(res))\n      this.users.push(this.editedItem)\n      this.close()\n      ;(this.text = 'A Meal has been added'), (this.color = 'green')\n      this.snackbar = true\n    }\n  }\n}\n</script>\n"]}]}