{"remainingRequest":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\src\\components\\CateTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\src\\components\\CateTable.vue","mtime":1579289834000},{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\Projects\\Zerofood-Admin-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nexport default {\n  data: () => ({\n    multiLine: true,\n    snackbar: false,\n    text: '',\n    file: '',\n    color: '',\n    dialog: false,\n    search: '',\n    headers: [\n      {\n        text: 'Name',\n        align: 'left',\n        sortable: false,\n        value: 'name'\n      },\n      { text: 'Created At', value: 'createdAt' },\n\n      { text: 'Actions', value: 'action', sortable: false }\n    ],\n    users: [],\n    editedIndex: -1,\n    editedItem: {\n      name: '',\n      isTop: '',\n      categories: [],\n      image: ''\n    },\n    defaultItem: {\n      name: '',\n      username: '',\n      phone: '',\n      email: ''\n    },\n    validationMsg: ''\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? 'New category' : 'Edit category'\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close()\n    }\n  },\n  created() {\n    this.initialize()\n  },\n  methods: {\n    initialize() {\n      this.$axios.get('/category').then(({ data }) => (this.users = data))\n    },\n    handleFileUpload() {\n      this.file = this.$refs.file\n      let formData = new FormData()\n      formData.append('file', this.file)\n      this.editedItem.image = formData\n      console.log(this.$refs.file)\n    },\n    async editItem(item) {\n      this.editedIndex = this.users.indexOf(item)\n      //we send the edited item in put request insted\n      await this.$axios.put(`/category/${item.id}`, {}, { params: item })\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n    navigate(item, id) {\n      this.$router.push({ name: 'project', params: { id } })\n    },\n    deleteItem(item) {\n      const index = this.users.indexOf(item)\n      this.users.slice(index, 1)\n      confirm('Are you sure you want to delete this category?') &&\n        //we send the deleted item in delete request insted\n\n        this.$axios.delete(`/category/delete/${item.id}`)\n      this.close()\n      ;(this.text = 'A category has been deleted'), (this.color = 'red')\n      this.snackbar = true\n    },\n    close() {\n      this.dialog = false\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    async save() {\n      //we send the new iteam in post request\n      if (!this.editedItem.name)\n        return (this.validationMsg = 'Name is required !')\n      await this.$axios.post('/category/store', {\n        name: this.editedItem['name']\n      })\n      this.users.push(this.editedItem)\n      this.close()\n      ;(this.text = 'A category has been added'), (this.color = 'green')\n      this.snackbar = true\n    }\n  }\n}\n",{"version":3,"sources":["CateTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"CateTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-data-table\n      :search=\"search\"\n      :headers=\"headers\"\n      :items=\"users\"\n      sort-by=\"calories\"\n      class=\"elevation-1\"\n    >\n      <template v-slot:top>\n        <v-toolbar flat color=\"white\">\n          <v-text-field\n            v-model=\"search\"\n            label=\"Search\"\n            single-line\n            hide-details\n          ></v-text-field>\n          <v-spacer></v-spacer>\n          <v-dialog v-model=\"dialog\" max-width=\"500px\">\n            <template v-slot:activator=\"{ on }\">\n              <v-btn color=\"deep-purple accent-4\" dark class=\"mb-2\" v-on=\"on\"\n                >New category</v-btn\n              >\n            </template>\n            <v-card>\n              <v-card-title>\n                <span class=\"headline\">New Category</span>\n              </v-card-title>\n              <v-card-text>\n                <v-container grid-list-lg>\n                  <p\n                    class=\"text-dark text-center bg-dark py-2 px-4\"\n                    v-if=\"validationMsg != ''\"\n                  >\n                    {{ validationMsg }}\n                  </p>\n                  <v-layout wrap>\n                    <v-flex xs12 sm12 md12>\n                      <v-text-field\n                        v-model=\"editedItem.name\"\n                        label=\" Name\"\n                      ></v-text-field>\n                    </v-flex>\n                  </v-layout>\n                </v-container>\n              </v-card-text>\n\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn color=\"deep-purple accent-4\" text @click=\"close\"\n                  >Cancel</v-btn\n                >\n                <v-btn color=\"deep-purple accent-4\" text @click=\"save\"\n                  >Save</v-btn\n                >\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </v-toolbar>\n      </template>\n      <template v-slot:item.action=\"{ item }\">\n        <v-icon small @click=\"navigate(item, item.id)\"\n          >mdi-cursor-default-click</v-icon\n        >\n        <v-icon small class=\"mr-2\" @click=\"editItem(item)\"\n          >mdi-pencil-outline</v-icon\n        >\n        <v-icon small @click=\"deleteItem(item)\">mdi-delete</v-icon>\n      </template>\n      <template v-slot:no-data>\n        <v-btn color=\"white--text deep-purple accent-4\" @click=\"initialize\"\n          >Reset</v-btn\n        >\n      </template>\n    </v-data-table>\n    <v-snackbar v-model=\"snackbar\" :multi-line=\"multiLine\">\n      {{ text }}\n      <v-btn :color=\"color\" text @click=\"snackbar = false\">Close</v-btn>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  data: () => ({\n    multiLine: true,\n    snackbar: false,\n    text: '',\n    file: '',\n    color: '',\n    dialog: false,\n    search: '',\n    headers: [\n      {\n        text: 'Name',\n        align: 'left',\n        sortable: false,\n        value: 'name'\n      },\n      { text: 'Created At', value: 'createdAt' },\n\n      { text: 'Actions', value: 'action', sortable: false }\n    ],\n    users: [],\n    editedIndex: -1,\n    editedItem: {\n      name: '',\n      isTop: '',\n      categories: [],\n      image: ''\n    },\n    defaultItem: {\n      name: '',\n      username: '',\n      phone: '',\n      email: ''\n    },\n    validationMsg: ''\n  }),\n  computed: {\n    formTitle() {\n      return this.editedIndex === -1 ? 'New category' : 'Edit category'\n    }\n  },\n  watch: {\n    dialog(val) {\n      val || this.close()\n    }\n  },\n  created() {\n    this.initialize()\n  },\n  methods: {\n    initialize() {\n      this.$axios.get('/category').then(({ data }) => (this.users = data))\n    },\n    handleFileUpload() {\n      this.file = this.$refs.file\n      let formData = new FormData()\n      formData.append('file', this.file)\n      this.editedItem.image = formData\n      console.log(this.$refs.file)\n    },\n    async editItem(item) {\n      this.editedIndex = this.users.indexOf(item)\n      //we send the edited item in put request insted\n      await this.$axios.put(`/category/${item.id}`, {}, { params: item })\n      this.editedItem = Object.assign({}, item)\n      this.dialog = true\n    },\n    navigate(item, id) {\n      this.$router.push({ name: 'project', params: { id } })\n    },\n    deleteItem(item) {\n      const index = this.users.indexOf(item)\n      this.users.slice(index, 1)\n      confirm('Are you sure you want to delete this category?') &&\n        //we send the deleted item in delete request insted\n\n        this.$axios.delete(`/category/delete/${item.id}`)\n      this.close()\n      ;(this.text = 'A category has been deleted'), (this.color = 'red')\n      this.snackbar = true\n    },\n    close() {\n      this.dialog = false\n      setTimeout(() => {\n        this.editedItem = Object.assign({}, this.defaultItem)\n        this.editedIndex = -1\n      }, 300)\n    },\n    async save() {\n      //we send the new iteam in post request\n      if (!this.editedItem.name)\n        return (this.validationMsg = 'Name is required !')\n      await this.$axios.post('/category/store', {\n        name: this.editedItem['name']\n      })\n      this.users.push(this.editedItem)\n      this.close()\n      ;(this.text = 'A category has been added'), (this.color = 'green')\n      this.snackbar = true\n    }\n  }\n}\n</script>\n"]}]}